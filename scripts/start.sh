#!/bin/bash

# Fukoji Docker Start Script
echo "üöÄ Kh·ªüi ƒë·ªông m√¥i tr∆∞·ªùng Docker cho Fukoji..."

# Change to project root directory
cd "$(dirname "$0")/../.."
PROJECT_ROOT=$(pwd)
DOCKER_DIR="Server/docker"

# Load domain configuration
source Server/scripts/get-domain.sh

# Load environment variables if .env exists
if [ -f "${DOCKER_DIR}/.env" ]; then
    set -a  # automatically export all variables
    source "${DOCKER_DIR}/.env"
    set +a  # stop auto-export
fi

# Ki·ªÉm tra Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t!"
    exit 1
fi

if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    echo "‚ùå Docker Compose ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t!"
    exit 1
fi

# D·ª´ng c√°c container c≈© n·∫øu c√≥
echo "üõë D·ª´ng c√°c container c≈©..."
docker-compose -f "${DOCKER_DIR}/docker-compose.yml" --env-file "${DOCKER_DIR}/.env" down 2>/dev/null || docker compose -f "${DOCKER_DIR}/docker-compose.yml" --env-file "${DOCKER_DIR}/.env" down 2>/dev/null || true

# Kh·ªüi ƒë·ªông containers (kh√¥ng rebuild, kh√¥ng x√≥a volumes)
echo "üöÄ Kh·ªüi ƒë·ªông containers..."
if command -v docker-compose &> /dev/null; then
    docker-compose -f "${DOCKER_DIR}/docker-compose.yml" --env-file "${DOCKER_DIR}/.env" up -d
else
    docker compose -f "${DOCKER_DIR}/docker-compose.yml" --env-file "${DOCKER_DIR}/.env" up -d
fi

# ƒê·ª£i MySQL kh·ªüi ƒë·ªông
echo "‚è≥ ƒê·ª£i MySQL kh·ªüi ƒë·ªông..."
sleep 20

# Ki·ªÉm tra tr·∫°ng th√°i
echo "üìä Ki·ªÉm tra tr·∫°ng th√°i containers..."
if command -v docker-compose &> /dev/null; then
    docker-compose -f "${DOCKER_DIR}/docker-compose.yml" --env-file "${DOCKER_DIR}/.env" ps
else
    docker compose -f "${DOCKER_DIR}/docker-compose.yml" --env-file "${DOCKER_DIR}/.env" ps
fi

echo ""
echo "‚úÖ M√¥i tr∆∞·ªùng Docker ƒë√£ s·∫µn s√†ng!"
echo ""
echo "üåê Truy c·∫≠p ·ª©ng d·ª•ng t·∫°i:"
echo "   - Website: http://$DOMAIN"
echo "   - phpMyAdmin: http://localhost:${PMA_PORT:-8081}"
echo ""
echo "üóÑÔ∏è Th√¥ng tin database:"
echo "   - Host: mysql (trong container) ho·∫∑c localhost:${DB_PORT:-3306} (t·ª´ m√°y host)"
echo "   - Database: ${DB_NAME}"
echo "   - Username: ${DB_USER}"
echo "   - Password: ${DB_PASS}"
echo "   - Root Password: ${MYSQL_ROOT_PASSWORD:-root123}"
echo ""
echo "üîß C√°c l·ªánh h·ªØu √≠ch:"
echo "   - Xem status: ./Server/scripts/container-helper.sh status"
echo "   - Xem logs: ./Server/scripts/container-helper.sh logs web"
echo "   - D·ª´ng: ./Server/scripts/stop.sh"
echo "   - Restart: ./Server/scripts/restart.sh"
echo "   - V√†o container web: ./Server/scripts/container-helper.sh exec web bash"
echo "   - V√†o MySQL: ./Server/scripts/container-helper.sh exec mysql mysql -u ${DB_USER} -p ${DB_NAME}"
echo ""
echo "üí° L∆∞u √Ω: Script n√†y S·ª¨ D·ª§NG database c√≥ s·∫µn, kh√¥ng import l·∫°i"
echo "    N·∫øu c·∫ßn setup l·∫°i t·ª´ ƒë·∫ßu, ch·∫°y: ./Server/scripts/setup.sh"
